getwd()
#오칙연산
1+1
a<-1
a
b <- 2
b
a+b
vec01<-c(1,2,3,7) #object객체 
vec01
vec02 <- c(1:5)
vec02
vec03 <- seq(1,5) #c(1:5)와 완전히 동일 
vec03
vec04 <- 1:5
vec04
#c가 생략 될 수도 있다 
vec05 <- seq(1L,10L, by=2)
vec05
class(vec05)
vec06 <- c("안",'녕')
vec06
class(vec06)
vec06 <- 1:3
mean(vec06)
max(vec06)
min(vec06)
a*b
3*a+b
## 5+7 더하기 로직을 구하시오
x <- 5
y <- 7
x+y
## 5+7 더하기 로직을 식까지 보이도록 하시오
op <- "+"
eq <- "="
cat(x,op,y,eq,x+y)
cat(x,"+",y,"=",x+y)
##더하기 로직을 구하시오
plus <- function(x,y){return(x+y)} # 진짜 객체 (모든 식을 함수로 만들어 써라)
plus(3,4)

multiply <- function(x,y){return(x*y)}
multiply(4,5)

minus <- function(x,y){return(x-y)}
minus(10,5)

divd <- function(x,y){return(x%/%y)}
divd(13,5)

remainder <- function(x,y){return(x%%y)}
remainder(13,5)

##assignment <- : 할당
## branch <- : 분기문
## loop : 반복문 

## if-else 구문 :: 함수 만들기 전
x<-20
op <- "*"
y <- 3
if(op=='+')cat(x,op,y,"=",x+y)else #등호는 상수처리 # 비교연산자는 ==
if(op=='-')cat(x,op,y,"=",x-y) else
if(op=='*')cat(x,op,y,"=",x*y) else
if(op=='/')cat(x,op,y,"=",x%/%y) else
if(op=='%')cat(x,op,y,"=",x%%y) else
  print("error")
               
#if-else 구문 (결과만)
op <- "+"  
x<-6
y<-3
if(op=="+")print(x+y) else
if(op=="-")print(x-y) else
if(op=="*")print(x*y) else
if(op=="/")print(x%/%y) else
if(op=="%")print(x%%y) else
  print("error")

op <- "%"  
x<-6
y<-3
cat(
  x,
  op,
  y,
  "=",
switch(
  op,
  "+"= toString(x + y),
  "-"= toString(x-y),
  "*"= toString(x*y),
  "/"=toString(x%/%y),
  "%"=toString(x%%y)
))

##switch 구문
x<-20
op <- "*"
y <- 3
switch(
  op,
  "+"=cat(x,op,y,"=",x+y),
  "-"=cat(x,op,y,"=",x-y),
  "*"=cat(x,op,y,"=",x*y),
  "/"=cat(x,op,y,"=",x%/%y),
  "%"=cat(x,op,y,"=",x%%y),
  "error"
)

## if-else 구문 :: 함수
calc <- function(x,op,y){
  res <- if(op=='+')x+y else 
  if(op=='-')x-y else
  if(op=='*')x*y else
  if(op=='/')x%/%y else
  if(op=='%')x%%y else
    ("error")
  return(cat(x,op,y,'=',res)) 
}
calc(3,"+",2)
calc(3,"-",2)
calc(3,"*",2)
calc(3,"/",2)
calc(3,"%",2)

## switch 구문 :: 함수
calc <- function(x,op,y){
  res <- switch(
    op,
    "+"=x+y,
    "-"=x-y,
    "*"=x*y,
    "/"=x%/%y,
    "%"=x%%y,
    "error")
  return (cat(x,op,y,'=',res))
} 
calc(3,'+',4)

calc <- function(x,y,op)
  if (op=="+")a<-(x+y) else
  if (op=="-")a<-(x-y) else
  if (op=="*")a<-(x*y) else
  if (op=="/")a<-(x%/%y) else
  if (op=='%')a<-(x%%y) else
    a<-"error"
{return(x,op,y,"=",a)}

calc(3,4,"+")

##성적표
# kor, eng, math, 총점과 평균
#grade (80,80,80)
# 총점:240 평균:80

grade <- function(kor,eng,math){
  sum=kor+eng+math
  mean=sum%/%3
  return(cat('총점 : ',sum,' 평균 : ', mean))
}

grade(80,80,80)

##성적표
# kor, eng, math, 총점과 평균
#grade (80,80,80)
# 총점:240 평균:80
# if-else, switch
# 평균 90 이상 A, 80 이상 B, 70 이상 C, 60 이상 D, 50 이상 E, 그 밖 F
grade <- function(kor,eng,math){
  sum=kor+eng+math
  mean=sum%/%3
  if (mean >=90)score='A'else
  if (mean<90 & mean>=80)score='B'else
  if (mean<80 & mean>=70)score='C'else
  if (mean<70 & mean>=60)score='D'else
  if (mean<60 & mean>=50)score='E'else
    'F'
    
  return(score)
}
grade(80,80,80)

grade <- function(kor,eng,math){
  sum=kor+eng+math
  mean=sum%/%3
  kk=toString(mean%/%10)
  score <-switch(
    kk,
    "9"='A',
    "8"='B',
    "7"='C',
    "6"='D',
    "5"='E',
    "10"='A',
    'F')
  return(score)
}
grade(100,100,100)


  
